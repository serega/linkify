# Based on https://github.com/actions-rs/meta/blob/master/recipes/msrv.md

name: ci
on: [push, pull_request]

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.46.0 # MSRV (minimum supported Rust version)
          - stable
          - beta
        include:
          - rust: 1.46.0
            msrv: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      # See https://github.com/matklad/once_cell/issues/201
      # To test locally, enable the lock file and then run:
      # $ docker run --rm --user "$(id -u)":"$(id -g)" -v "$PWD":/usr/src/myapp -w /usr/src/myapp rust:1.46.0 cargo test
      - name: Use Cargo.lock for MSRV
        if: ${{ matrix.msrv }}
        run: cp Cargo.lock.msrv Cargo.lock

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Generate code coverage
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  demo:
    name: wasm demo
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: demo
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: yarn
        run: yarn

      - name: yarn build
        run: yarn build
